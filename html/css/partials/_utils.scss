$debug-mode : false;


@mixin opacity($value:0.5) {
  opacity: $value;
  -ms-filter: "progid:DXImageTransform.Microsoft.Alpha(Opacity="$value*100")";
  filter: alpha(opacity=$value*100);
  zoom: 1;
  @if $debug-mode == true { @warn "Used OPACITY of #{$value}" };
}

@mixin rotate($value:0) {
  -webkit-transform: rotate($value);
  -moz-transform: rotate($value);
  -ms-transform: rotate($value);
  -o-transform: rotate($value);
  transform: rotate($value);
}

@mixin transition-duration($value:500ms) {
  -webkit-transition-duration: $value;
  -moz-transition-duration: $value;
  -o-transition-duration: $value;
  transition-duration: $value;
  @if $debug-mode == true { @warn "Used TRANSITION-DURATION of #{$value}" };
}

@mixin transition-timing-function($value:linear) {
  -webkit-transition-timing-function: $value;
  -moz-transition-timing-function: $value;
  -o-transition-timing-function: $value;
  transition-timing-function: $value;
  @if $debug-mode == true { @warn "Used TRANSITION-TIMING-FUNCTION of #{$value}" };
}

@mixin transition-property($value:all)  {
  -webkit-transition-property: $value;
  -moz-transition-property: $value;
  -o-transition-property: $value;
  transition-property: $value;
  @if $debug-mode == true { @warn "Used TRANSITION-PROPERTY of #{$value}" };
}

@mixin border-radius($radius) {
  -webkit-border-radius: $radius;
     -moz-border-radius: $radius;
      -ms-border-radius: $radius;
          border-radius: $radius;
  @if $debug-mode == true { @warn "Used BORDER-RADIUS of #{$radius}" };
}


$browser-context: 16; // Default
 @function em($pixels, $context: $browser-context) {
  @return #{$pixels/$context}em;
}

.img-responsive {
  display: block;
  max-width: 100%;
  height: auto;
  width:auto;
}

.button {
  @include transition-duration(400ms);
  @include transition-property(opacity);
  @include opacity(1);
  &:hover{
    @include transition-property(opacity);
    @include transition-duration(400ms);
    @include opacity(0.8);
  }
}
